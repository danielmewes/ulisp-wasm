var w=Object.defineProperty;var l=(u,a)=>w(u,"name",{value:a,configurable:!0});(function(){"use strict";(function(){const o={NODE_ENV:"production"};try{if(process){process.env=Object.assign({},process.env),Object.assign(process.env,o);return}}catch{}globalThis.process={env:o}})();var u=Object.defineProperty,a=l((o,n)=>u(o,"name",{value:n,configurable:!0}),"f");const c=document.getElementById("console"),f=document.getElementById("canvas");(async()=>{const{createUlispModule:o}=window,n=await o({print:function(){if(c)return c.value="",(...t)=>{const e=t.join(" ").split(`
`);for(const s of e)if(s.startsWith("json:")){console.log(s);try{const g=JSON.parse(s.replace(/^json:/,""));console.log("Got value",g)}catch(g){console.log(g)}}else s&&(console.log(s),c.innerText+=s+`
`,c.scrollTop=c.scrollHeight)}}(),canvas:(()=>{if(f)return f})(),setStatus:function(t){if(console.log("this",this),this.setStatus.last||(this.setStatus.last={time:Date.now(),text:""}),t===this.setStatus.last.text)return;const e=t.match(/([^(]+)\((\d+(\.\d+)?)\/(\d+)\)/),s=Date.now();e&&s-this.setStatus.last.time<30||(this.setStatus.last.time=s,this.setStatus.last.text=t,e&&(t=e[1]),t&&console.log("uLisp",t))},totalDependencies:0});window.onerror=t=>{n.setStatus("Exception thrown, see JavaScript console"),n.setStatus=e=>{e&&console.error("[post-exception status] "+e)}};const d=[];let i=!1;n._setup(),window.ulisp={run:r,call(t,...e){switch(console.log("ulisp.call",t,...e),t){case"analogRead":return e[0]/2;case"analogWrite":break;case"digitalRead":return e[0]}},escape(){return 0},wait_for_tick(){return i?1:new Promise((t,e)=>{d.push(t)})},stop(){i=!0}};const v=document.getElementById("code-form"),p=document.getElementById("code"),h=document.getElementById("run");v.addEventListener("submit",function(t){t.preventDefault(),r(p.value)}),h.addEventListener("click",function(){console.log("click"),r(p.value)}),p.value="(+ 1 (* 2 3))",h.click();async function m(){const t=d.shift();return t?(await new Promise((e,s)=>{t(i?1:0),setTimeout(e,0)}),d.length):!1}l(m,"g"),a(m,"tick");async function r(t){n.print(`
> `+t+`
`),i=!1;const e=n.stringToNewUTF8(t);n._evaluate(e);try{for(;await m(););}catch(s){console.log(s)}n._free(e)}l(r,"u"),a(r,"run")})().catch(console.error)})();
